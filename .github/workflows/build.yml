on: [push, pull_request]

jobs:
  build-linux:
    strategy:
      matrix:
        target:
          - arch: i386
            qualifier: x86_32
          - arch: amd64
            qualifier: x86_64
          - arch: arm64v8
            qualifier: aarch64
          - arch: ppc64le
            qualifier: ppc64le
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build project and push Docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          context: .
          platforms: ${{ matrix.target.arch }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/aeiou:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Copy executable from Docker image to host
        run: |
          id=$(docker ps -q | xargs)
          build_path=$(\
              docker exec $id ls -R / | \
              grep "aeiou/target/debug:" | \
              sed -e "s/:.*//" \
          )

          docker cp "$id:$build_path/aeiou" "hello-${{ matrix.target.qualifier }}"
      - name: Upload artifact for linux-${{ matrix.target.qualifier }}
        uses: actions/upload-artifact@v3
        with:
          name: hello-${{ matrix.target.qualifier }}-linux
          path: hello-${{ matrix.target.qualifier }}
  build-windows:
    strategy:
      matrix:
        target:
          - triplet: x86_64-pc-windows-gnu
            qualifier: x86_64
          - triplet: i686-pc-windows-gnu
            qualifier: x86_32
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target.triplet }}
      - name: Build project
        run: |
          printf "\
          [build] \n\
          rustflags = [\"-C\", \"embed-bitcode=off\"] \n\
          [profile.dev] \n\
          lto = \"off\" \
          " > $HOME/.cargo/config

          cargo build --target ${{ matrix.target.triplet }}
      - name: Upload artifact for windows-${{ matrix.target.qualifier }}
        uses: actions/upload-artifact@v3
        with:
          name: aeiou-${{ matrix.target.qualifier }}-windows
          path: target/${{ matrix.target.triplet }}/debug/aeiou.exe
